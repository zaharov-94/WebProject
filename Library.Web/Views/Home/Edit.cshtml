@model Library.Web.Entities.Book
@{
    Layout = null;
}
@Styles.Render("~/Content/Site.css")
@Styles.Render("~/Content/kendo.common-material.min.css")
@Styles.Render("~/Content/kendo.material.min.css")
@Scripts.Render("~/Scripts/jquery.min.js")
@Scripts.Render("~/Scripts/kendo.all.min.js")
@Scripts.Render("~/Scripts/kendo.user.js")
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body class="addmain">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfPublishing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfPublishing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfPublishing, "", new { @class = "text-danger" })
            </div>
        </div>
        <script type="text/javascript">
            var t = $.getJSON("/home/GetPublish/1", function (json) {
                $.each(json, function setSelectOptions("#required", json, valueKey, textKey, defaultValue) {

                    if (typeof (selectElement) == "string") {
                        selectElement = $(selectElement);
                    }

                    selectElement.empty();

                    if (typeof (values) == 'object') {

                        if (values.length) {

                            var type = typeof (values[0]);
                            var html = "";

                            if (type == 'object') {
                                // values is array of hashes
                                var optionElement = null;

                                $.each(values, function () {
                                    html += '<option value="' + this[valueKey] + '">' + this[textKey] + '</option>';
                                });

                            } else {
                                // array of strings
                                $.each(values, function () {
                                    var value = this.toString();
                                    html += '<option value="' + value + '">' + value + '</option>';
                                });
                            }

                            selectElement.append(html);
                        }

                        // select the defaultValue is one was passed in
                        if (typeof defaultValue != 'undefined') {
                            selectElement.children('option[value="' + defaultValue + '"]').attr('selected', 'selected');
                        }

                    }

                    return false;

                });
            });
            
        </script>
        <div class="form-group col-md-10">
            @Html.LabelFor(model => model.PublicationHouses, htmlAttributes: new { @class = "control-label col-md-2" })
            <select class="form-control" id="required" multiple="multiple" data-placeholder="Select attendees...">
                
            </select>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @Class = "btn btn-danger" })
            </div>
        </div>
    </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</body>
</html>